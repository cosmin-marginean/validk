plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.kapt" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "org.jetbrains.dokka" version "1.7.20"
    id "io.micronaut.library" version "${micronautPluginsVersion}"
    id "io.micronaut.test-resources" version "${micronautPluginsVersion}"
    id "jacoco"
    id "com.github.nbaztec.coveralls-jacoco" version "1.2.15"
}

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadocJar {
    dependsOn(dokkaHtml)
    archiveClassifier.set("javadoc")
    from(dokkaHtml.outputDirectory)
}

dokkaHtml {
    outputDirectory.set(file("../docs/dokka/${project.name}"))
}

dependencies {
    implementation project(":validk")

    kapt 'io.micronaut:micronaut-inject-java'

    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation 'io.micronaut:micronaut-aop'
    implementation 'io.micronaut:micronaut-core'
    implementation 'io.micronaut:micronaut-http'
    implementation 'io.micronaut:micronaut-http-server'
    implementation "io.micronaut.views:micronaut-views-core"

    kaptTest "io.micronaut:micronaut-inject-java"
    testImplementation "io.kotest:kotest-assertions-core:${kotestVersion}"
    testImplementation "io.kotest:kotest-property:${kotestVersion}"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:${kotestVersion}"
    testImplementation "io.micronaut.test:micronaut-test-kotest5:3.9.2"
    testImplementation "io.micronaut.views:micronaut-views-pebble"
    testImplementation "com.squareup.okhttp3:okhttp:4.10.0"
    testImplementation "com.beust:klaxon:5.6"
    testImplementation "io.micronaut:micronaut-http-server-netty"
}

kotlin {
    jvmToolchain(17)
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
    systemProperty "kotest.framework.parallelism", "1"
    finalizedBy jacocoTestReport
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'validk'
                description = 'A validation framework for Kotlin'
                url = 'https://github.com/cosmin-marginean/validk'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/cosmin-marginean/validk/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/cosmin-marginean/validk'
                    connection = 'scm:git:git://github.com/cosmin-marginean/validk.git'
                    developerConnection = 'scm:git:ssh://git@github.com:cosmin-marginean/validk.git'
                }
                developers {
                    developer {
                        name = 'Cosmin Marginean'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

jacocoTestReport {
    reports {
        html.required = true
        xml.required = true
    }
}

allOpen {
    annotation("io.micronaut.http.annotation.Controller")
}

tasks.withType(PublishToMavenRepository) { it.dependsOn test }
